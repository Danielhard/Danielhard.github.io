(window.webpackJsonp=window.webpackJsonp||[]).push([[38],{238:function(t,e,a){"use strict";a.r(e);var n=a(0),r=Object(n.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"pdo，php的数据对象，-拓展为php访问数据库定义了一个轻量级的一致接口。"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#pdo，php的数据对象，-拓展为php访问数据库定义了一个轻量级的一致接口。","aria-hidden":"true"}},[t._v("#")]),t._v(" PDO，PHP的数据对象， 拓展为PHP访问数据库定义了一个轻量级的一致接口。")]),t._v(" "),a("p",[a("strong",[t._v("提供了一个数据访问抽象层，这意味着，不管使用哪种数据库，都可以用相同的函数（方法）来查询和获取数据。")])]),t._v(" "),a("h2",{attrs:{id:"为了更好的理解，先上个demo"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#为了更好的理解，先上个demo","aria-hidden":"true"}},[t._v("#")]),t._v(" ---为了更好的理解，先上个DEMO---;")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('  <?php\n    header("Content-Type: text/html;charset=utf-8"); //加个脑袋，正常流程\n    $dbms = "mysql";   //数据库类型\n    $host= "localhost"; //数据库主机名\n    $dbName = "zzxPHP";   //使用的数据库\n    $user ="root";  //数据库连接用户名\n    $pass = "";   //对应的密码\n    $dsn = "$dbms:host=$host;dbname=$dbName;charset=utf8"; //如果需要规定字符串编码，可以加在这，也可以用PDO::_construct 或者exec一些其他API\n    try{\n       $dbh = new PDO($dsn,$user,$pass); //初始化一个PDO对象\n    //   foreach($dbh->query("SELECT * FROM `news`") as $row){ 你还可以进行一次搜索操作\n    //      print_r($row); //这里把库里的数据拎出来晒一晒\n    //   }\n      $sql = "INSERT INTO `test`(`test_title`,`test_img`,`test_content`,`test_time`) VALUES (\'c噗噗噗\',\'c图片新地址\',\'c新闻新内容\',\'2017-09-28\')";\n      $res = $dbh->exec($sql); //执行一条 SQL 语句，并返回受影响的行数 ,好用- -\n      echo "插入成功，受影响的行数" . $res;\n\n      //默认这个不是长连接，如果需要数据库长连接，需要最后加一个参数：array(PDO::ATTR_PERSISTENT => true) 变成这样：\n      $db = new PDO($dsn, $user, $pass, array(PDO::ATTR_PERSISTENT => true));\n\n      $dbh = null;  //记得关闭\n      //echo "连接成功<br/>";\n    }catch(PDOException $e){\n      die("ERROR:" . $e.getMessage() . "<br/>");\n    }\n  ?>\n')])])]),a("h2",{attrs:{id:"pdo的类"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#pdo的类","aria-hidden":"true"}},[t._v("#")]),t._v(" PDO的类")]),t._v(" "),a("ul",[a("li",[t._v("PDO::beginTransaction — 启动一个事务")]),t._v(" "),a("li",[t._v("PDO::commit — 提交一个事务")]),t._v(" "),a("li",[t._v("PDO::__construct — 创建一个表示数据库连接的 PDO 实例")]),t._v(" "),a("li",[t._v("PDO::errorCode — 获取跟数据库句柄上一次操作相关的 SQLSTATE")]),t._v(" "),a("li",[t._v("PDO::errorInfo — 返回最后一次操作数据库的错误信息")]),t._v(" "),a("li",[t._v("PDO::exec — 执行一条 SQL 语句，并返回受影响的行数")]),t._v(" "),a("li",[t._v("PDO::getAttribute — 取回一个数据库连接的属性")]),t._v(" "),a("li",[t._v("PDO::getAvailableDrivers — 返回一个可用驱动的数组")]),t._v(" "),a("li",[t._v("PDO::inTransaction — 检查是否在一个事务内")]),t._v(" "),a("li",[t._v("PDO::lastInsertId — 返回最后插入行的ID或序列值")]),t._v(" "),a("li",[t._v("PDO::prepare — 备要执行的SQL语句并返回一个 PDOStatement 对象")]),t._v(" "),a("li",[t._v("PDO::query — 执行 SQL 语句，返回PDOStatement对象,可以理解为结果集")]),t._v(" "),a("li",[t._v("PDO::quote — 为SQL语句中的字符串添加引号。")]),t._v(" "),a("li",[t._v("PDO::rollBack — 回滚一个事务")]),t._v(" "),a("li",[t._v("PDO::setAttribute — 设置属性")])]),t._v(" "),a("h2",{attrs:{id:"pdostatement-类"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#pdostatement-类","aria-hidden":"true"}},[t._v("#")]),t._v(" PDOStatement 类")]),t._v(" "),a("ul",[a("li",[t._v("PDOStatement::bindColumn — 绑定一列到一个 PHP 变量")]),t._v(" "),a("li",[t._v("PDOStatement::bindParam — 绑定一个参数到指定的变量名")]),t._v(" "),a("li",[t._v("PDOStatement::bindValue — 把一个值绑定到一个参数")]),t._v(" "),a("li",[t._v("PDOStatement::closeCursor — 关闭游标，使语句能再次被执行。")]),t._v(" "),a("li",[t._v("PDOStatement::columnCount — 返回结果集中的列数")]),t._v(" "),a("li",[t._v("PDOStatement::debugDumpParams — 打印一条 SQL 预处理命令")]),t._v(" "),a("li",[t._v("PDOStatement::errorCode — 获取跟上一次语句句柄操作相关的 SQLSTATE")]),t._v(" "),a("li",[t._v("PDOStatement::errorInfo — 获取跟上一次语句句柄操作相关的扩展错误信息")]),t._v(" "),a("li",[t._v("PDOStatement::execute — 执行一条预处理语句")]),t._v(" "),a("li",[t._v("PDOStatement::fetch — 从结果集中获取下一行")]),t._v(" "),a("li",[t._v("PDOStatement::fetchAll — 返回一个包含结果集中所有行的数组")]),t._v(" "),a("li",[t._v("PDOStatement::fetchColumn — 从结果集中的下一行返回单独的一列。")]),t._v(" "),a("li",[t._v("PDOStatement::fetchObject — 获取下一行并作为一个对象返回。")]),t._v(" "),a("li",[t._v("PDOStatement::getAttribute — 检索一个语句属性")]),t._v(" "),a("li",[t._v("PDOStatement::getColumnMeta — 返回结果集中一列的元数据")]),t._v(" "),a("li",[t._v("PDOStatement::nextRowset — 在一个多行集语句句柄中推进到下一个行集")]),t._v(" "),a("li",[t._v("PDOStatement::rowCount — 返回受上一个 SQL 语句影响的行数")]),t._v(" "),a("li",[t._v("PDOStatement::setAttribute — 设置一个语句属性")]),t._v(" "),a("li",[t._v("PDOStatement::setFetchMode — 为语句设置默认的获取模式。")])]),t._v(" "),a("h2",{attrs:{id:"the-next"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#the-next","aria-hidden":"true"}},[t._v("#")]),t._v(" The Next:")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/Danielhard/step-by-step/blob/master/note/php/OOP.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("PHP面向对象"),a("OutboundLink")],1)]),t._v(" "),a("hr"),t._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/Danielhard/step-by-step/blob/master/note/php/index.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("返回主目录"),a("OutboundLink")],1)])])}),[],!1,null,null,null);e.default=r.exports}}]);