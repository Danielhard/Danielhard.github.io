(window.webpackJsonp=window.webpackJsonp||[]).push([[40],{239:function(t,a,e){"use strict";e.r(a);var s=e(0),r=Object(s.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"php基础"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#php基础","aria-hidden":"true"}},[t._v("#")]),t._v(" PHP基础")]),t._v(" "),e("h2",{attrs:{id:"语法，变量，数据类型"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#语法，变量，数据类型","aria-hidden":"true"}},[t._v("#")]),t._v(" 语法，变量，数据类型")]),t._v(" "),e("h2",{attrs:{id:"语法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#语法","aria-hidden":"true"}},[t._v("#")]),t._v(" 语法")]),t._v(" "),e("ol",[e("li",[t._v("php以<?php 开头 以?>结束  文件名后缀为.php")]),t._v(" "),e("li",[t._v("php文件html标签以及php脚本代码")]),t._v(" "),e("li",[t._v("php每行代码以分号结束,否则会输出错误")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v(' <?php\n $a = "测试";\n if(1>2){\n    echo "hello PHP";\n }else{\n    echo "my first php $a";\n }\n ?>\n\n')])])]),e("h2",{attrs:{id:"变量"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#变量","aria-hidden":"true"}},[t._v("#")]),t._v(" 变量")]),t._v(" "),e("h3",{attrs:{id:"规则"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#规则","aria-hidden":"true"}},[t._v("#")]),t._v(" 规则")]),t._v(" "),e("ol",[e("li",[t._v("php变量声明必须以$符开头（$a）")]),t._v(" "),e("li",[t._v("变量名必须以字母或者下划线字符开始")]),t._v(" "),e("li",[t._v("变量名只能包含字母数字字符以及下划线（A-z、0-9 和 _ ）,不能包含空格，且严格区分大小写。")]),t._v(" "),e("li",[t._v("PHP是弱类型语言所以变量不必声明类型和JS类似")])]),t._v(" "),e("h3",{attrs:{id:"作用域范围"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#作用域范围","aria-hidden":"true"}},[t._v("#")]),t._v(" 作用域范围")]),t._v(" "),e("ol",[e("li",[t._v("局部作用域(local)")]),t._v(" "),e("li",[t._v("全局作用域(global)"),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v(" <?php\n   $c = '全局的';\n   function test(){\n    $d = '局部的'; //局部变量\n     echo $d; \n     global $c; //访问全局作用域\n     echo $GLOBALS[\"b\"]; //访问全局作用域，可以访问其他文件内部变量,需在当前文件内引入\n     echo $c; //可以输出函数外部的变量c\n   }\n   test();\n?>\n")])])])])]),t._v(" "),e("ul",[e("li",[t._v("$c 是在函数外部定义的变量，拥有全局作用域，但是函数内部普通访问是获取不到的。")]),t._v(" "),e("li",[t._v("$d 是在函数内部声明的变量所以是局部变量，只能在函数内部访问")]),t._v(" "),e("li",[t._v("global $c 是在函数内部调用函数外部定义的全局变量,正常在函数内部访问函数外部的变量为NULL")]),t._v(" "),e("li",[t._v("PHP 同时在名为 $GLOBALS[index] 的数组中存储了所有的全局变量。下标存有变量名。这个数组在函数内也可以访问，并能够用于直接更新全局变量")])]),t._v(" "),e("ol",{attrs:{start:"3"}},[e("li",[t._v("statc(静态作用域)"),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("  <?php\n   function myTest() {\n    static $x=0;\n    echo $x;\n    $x++;\n   }\n   myTest();\n   myTest();\n   myTest();\n  ?>\n")])])])])]),t._v(" "),e("ul",[e("li",[t._v("通常，当函数完成/执行后，会删除所有变量。有时需要不删除某个局部变量。实现这一点需要更进一步的工作。这是需要在声明变量时使用 static 关键词")]),t._v(" "),e("li",[t._v("每当函数被调用时，这个变量所存储的信息都是函数最后一次被调用时所包含的信息")]),t._v(" "),e("li",[t._v("注意。该变量仍是函数的局部变量")]),t._v(" "),e("li",[t._v("静态全局变量的作用域局限于一个源文件内，只能为该源文件内的函数公用")]),t._v(" "),e("li",[t._v("不能对静态变量用表达式的结果赋值，否则会导致解析错误")]),t._v(" "),e("li",[t._v("static全局变量只初使化一次，下一次依据上一次结果值，上例子中调用三次执行的结果是累加的。")]),t._v(" "),e("li",[t._v("在内存的静态存储区中（静态存储区在整个程序运行期间都存在，其他局部变量存储在栈中。)")])]),t._v(" "),e("h2",{attrs:{id:"数据类型"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#数据类型","aria-hidden":"true"}},[t._v("#")]),t._v(" 数据类型")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("String(字符)")])]),t._v(" "),e("li",[e("p",[t._v("Integer(整型)")])]),t._v(" "),e("li",[e("p",[t._v("Boolean(布尔值)")])]),t._v(" "),e("li",[e("p",[t._v("Float(浮点类型)")])]),t._v(" "),e("li",[e("p",[t._v("数组")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v(" $arrayTest = array('0'=> '苹果', 1=> '测试');\n echo $arrayTest[0] // 苹果\n\n")])])])]),t._v(" "),e("li",[e("p",[t._v("对象")]),t._v(" "),e("p",[e("strong",[t._v("php中，对象是存储数据和有关如何处理数据的信息的数据类型。必须明确地声明对象。首先必须")]),t._v(" "),e("strong",[t._v("使用class关键词,声明对象的类,类是包含属性和方法的结构。然后在对象类中定义数据类型,")]),t._v(" "),e("strong",[t._v("然后在该类的实例中使用此数据类型:")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('<?php\n  class Car\n  {\n    var $color;\n    function Car($color="green") {\n      $this->color = $color;\n    }\n    function what_color() {\n      return $this->color;\n    }\n  }\n?>\n')])])])]),t._v(" "),e("li",[e("p",[t._v("NULL(空值)")])])]),t._v(" "),e("h2",{attrs:{id:"常量"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#常量","aria-hidden":"true"}},[t._v("#")]),t._v(" 常量")]),t._v(" "),e("p",[e("strong",[t._v("php常量是单个值的标识符（名称）。在脚本中无法改变该值,有效的常量名以字符或下划线开头（常量名称前面没有 $ 符号）。")]),t._v(" "),e("strong",[t._v("(注释：与变量不同，常量贯穿整个脚本是自动全局的。)")])]),t._v(" "),e("h2",{attrs:{id:"php会话机制session"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#php会话机制session","aria-hidden":"true"}},[t._v("#")]),t._v(" php会话机制session")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("  session_start();//一般在配置文件中初始化打开。可以在全局使用，设置存储变量\n  // a.php\n  $_SESSION['views'] = 1;\n  // b.php\n  echo $_SESSION['views'] // 1\n")])])]),e("h2",{attrs:{id:"the-next"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#the-next","aria-hidden":"true"}},[t._v("#")]),t._v(" The Next:")]),t._v(" "),e("p",[e("a",{attrs:{href:"https://github.com/Danielhard/step-by-step/blob/master/note/php/basic.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("PHP基本操作及常用内置API"),e("OutboundLink")],1)]),t._v(" "),e("hr"),t._v(" "),e("p",[e("a",{attrs:{href:"https://github.com/Danielhard/step-by-step/blob/master/note/php/index.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("返回主目录"),e("OutboundLink")],1)])])}),[],!1,null,null,null);a.default=r.exports}}]);