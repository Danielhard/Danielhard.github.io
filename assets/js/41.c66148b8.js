(window.webpackJsonp=window.webpackJsonp||[]).push([[41],{237:function(a,e,n){"use strict";n.r(e);var r=n(0),t=Object(r.a)({},(function(){var a=this,e=a.$createElement,n=a._self._c||e;return n("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[n("h1",{attrs:{id:"有关php的基本操作及常见内置api"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#有关php的基本操作及常见内置api","aria-hidden":"true"}},[a._v("#")]),a._v(" 有关php的基本操作及常见内置API")]),a._v(" "),n("h2",{attrs:{id:"_1-常见内置api"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-常见内置api","aria-hidden":"true"}},[a._v("#")]),a._v(" 1.常见内置API")]),a._v(" "),n("ul",[n("li",[n("p",[a._v("字符串函数")]),a._v(" "),n("ol",[n("li",[a._v("返回字符串长度 strlen()"),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v('<?php\n  echo strlen("Hello world!"); // 12\n?>\n')])])])]),a._v(" "),n("li",[a._v("神奇的API 可以统计单词数量  - -,"),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v('str_word_count("# arguments of String")   //参数为string字符串\n')])])])]),a._v(" "),n("li",[a._v("反转字符串strrev()"),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v('strrev("hello")   //参数为string字符串 \n// 输出  olleh\n')])])])]),a._v(" "),n("li",[a._v("strpos()  用于检索字符串制定字符或文本，如果找到就返回首个匹配字符位置。没有返回false"),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v('<?php\n  echo strpos("Hello world!","world");\n?>\n')])])])]),a._v(" "),n("li",[a._v("替换 str_replace()"),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v('<?php\n echo str_replace("world", "Kitty", "Hello world!"); // 输出 Hello Kitty!\n?>\n')])])])])])]),a._v(" "),n("li",[n("p",[a._v("数组内置 API")]),a._v(" "),n("ol",[n("li",[a._v("for、foreach循环输出数组元素"),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("<?php \n  // for循环\n  for ($i = 0; $i <= 100; $i++) {\n    echo \"$i <br/>\";\n  } \n\n  // foreach 只适用于数组\n  $name = array('zhangsan', 'lisi', 'wangwu');  // 创建数组\n  foreach ($name as $value) {\n    echo \"$value <br/>\";\n  }\n?>      \n")])])])]),a._v(" "),n("li",[a._v("count() 获取数组元素的个数"),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("   <?php\n    $nameLength = array('zhangsan', 'lisi', 'wangwu');\n    echo count($nameLength); // 3\n   ?> \n")])])])]),a._v(" "),n("li",[a._v("输出数组当前的元素的值，如果当前元素为空或者无值则返回FALSE"),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("  <?php\n    $name = array('zhangsan', 'lisi', 'wangwu');\n   \n    echo current($name); // 返回第一个元素zhangsan \n   \n    echo end($name); // 返回最后一个元素wangwu\n   \n    echo next($name); // 返回指定元素的下一个元素\n   \n    echo prev($name); // 返回指定元素的上一个元素\n   \n    echo reset($name); // 把内部指针移动到数组的首个元素zhangsan\n   \n  ?>\n")])])])]),a._v(" "),n("li",[a._v("对当前数组进行排序"),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("<?php\n $numbers = array(1, 2, 3, 3, 4, 5, 6, 2);\n\n // 返回bool\n sort($numbers);  //对数组进行升序成功则为true 失败则为false\n rsort($numbers); //对数组进行降序成功则为true 失败则为false\n array_reverse($array, $preserve); //对原数组按反序排序，返回排序后的数组(2, 6, 5, 4, 3, 3, 2, 1)\n?> \n")])])])]),a._v(" "),n("li",[a._v("合并数组"),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v(" <?php\n    $arr = array(1, 2, 3, 3, 4, 5, 6, 2);\n    $arr1 = array(10, 20, 30);\n    array_merge($arr, $arr1 );\n ?>\n")])])])]),a._v(" "),n("li",[a._v("压栈，出栈"),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("<?php\n    $name = 'wang';\n    $name1  = array('zhang', 'li');\n    array_push($name1, $name); // 3 返回新数组的长度\n    array_pop($name1); //li 返回被pop的值。栈为空，返回null\n    array_shift($name1); //删除第一个元素并返回；\n    array_unshift(array，val1，val2,...); //将参数按照顺序加入队列中\n?>\n")])])])]),a._v(" "),n("li",[a._v("统计数组中值为出现的次数"),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("   <?php\n     $val = array(1, 2, 3, 3, 4, 3, 3, 1, 1);\n     print_r(array_count_values($val));\n   ?>\n")])])])]),a._v(" "),n("li",[a._v("过滤数组的元素"),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("  <?php\n    function func ($var) {\n      return($var & 1);\n    }\n    $val = array('a', 'b', 2, 3, 4);\n    print_r(array_filter($val, 'func')); // 3\n  ?>\n")])])])]),a._v(" "),n("li",[a._v("检查索引是否在数组中"),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v(" <?php\n   $people = array('name'=>'renbo', 'age'=>'28');\n   if (array_key_exists('name', $people)) {\n       echo 'name存在';\n    }\n ?>\n")])])])]),a._v(" "),n("li",[a._v("检查数组中是否存在指定的值"),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v(" <?php\n  $val = array('zhangsan', 'lisi', 'wangwu');\n   if (in_array('zhangsan', $val)) {\n      echo '存在';\n    }\n ?>\n")])])])]),a._v(" "),n("li",[a._v("返回当前元素的Key"),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v(" <?php\n    $people = array('name'=>'renbo', 'age'=>'28');\n    key($people); //name\n ?>\n")])])])]),a._v(" "),n("li",[a._v("返回当前元素所有的key"),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v(" <?php\n    $people = array('name'=>'renbo','age'=>'28');\n    print_r(array_keys($people)); // name age  \n ?>\n")])])])])])]),a._v(" "),n("li",[n("p",[a._v("时间内置函数")]),a._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("   <?php\n      date(format[,timestamp]);\n      mktime(hour,minute,second,month,day,year); //省略的参数将以本地日期和时间代替\n      getdate([timestamp]); \n   ?>\n")])])])]),a._v(" "),n("li",[n("p",[a._v("URL处理内置函数")]),a._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("   <?php\n      urlencode(str); 返回值字符串中所有的非字母和数字字符变成一个百分号(%) 和一个两位的十六进制数，空格被转换成+,-、_和.不做任何转换\n      urldecode(str); \n   ?>\n")])])])])]),a._v(" "),n("h2",{attrs:{id:"the-next"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#the-next","aria-hidden":"true"}},[a._v("#")]),a._v(" The Next:")]),a._v(" "),n("p",[n("a",{attrs:{href:"https://github.com/Danielhard/step-by-step/blob/master/note/php/PDO.md",target:"_blank",rel:"noopener noreferrer"}},[a._v("PHP PDO"),n("OutboundLink")],1)]),a._v(" "),n("hr"),a._v(" "),n("p",[n("a",{attrs:{href:"https://github.com/Danielhard/step-by-step/blob/master/note/php/index.md",target:"_blank",rel:"noopener noreferrer"}},[a._v("返回主目录"),n("OutboundLink")],1)])])}),[],!1,null,null,null);e.default=t.exports}}]);